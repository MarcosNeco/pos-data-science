---
title: "Trabalho final Machine Learning I"
author: "Marcos Neco e Fabio Rowedder"
output:
  html_notebook:
    theme: united
    toc: yes 
    toc_depth: 2
  pdf_document:
    theme: united
    toc: yes
    toc_depth: 2
  html_document:
    df_print: paged
    toc: yes
    toc_depth: '2'
---

##Abordagem do problema

Questões que esperamos explorar no nosso conjutos de dados 

* Quais grupos de games frequentemente comprados em conjunto? (Clusterização)
* Qual será a nota atribuída por um cliente amazon para determinado Game, baseado nos dados histórico? (Regressão) 

## Fase de pré-processamento 
 Foram feitos dois pré-processamentos nos dados, um para criar os grupos dos itens mais comprados em conjunto e outro para a análise de regressão linear.

 * Análise de regressão
    + Foi necessário deletar todas as linhas que não estavam no padrão json, para que o import e futuramente o processamento no mongodb possa ser feito corretamente
    + Importar os arquivos de review e metadata para o mongodb na nuvem
    + Remover todas as revisões na qual não esta sendo informado o preço do produto no arquivo de  metadata.

 * Clusterização de produtos mais comprados 
    + devido à limitação de poder de processamento em hardware, foi necessário reduzir o dataset de análise de dados. Assim, foram considerados os aplicativos que receberam nota 5 de avaliação (overall 5.0) e que foram comprados em conjunto com outros aplicativos. Isso ajudou a potencializar as sugestões feitas, uma vez que só aplicativos com ótima reputação serão sugeridos.
    + Ainda para a tarefa de clusterização, foi necessário desenvolver um aplicativo Java para gerar uma matriz binária das vendas de aplicativos. Essa matriz é o input para o processamento de clusterização no RapidMiner (Esse arquivo esta dentro da pasta data do projeto, meta_Video_GamesBinaryMatrix.7z)
 

#Análise exploratória e Resultados

Abaixo quais análises foram utilizadas para entender os dados.

###Regressão Linear
Primeiro passo é carregar os dados que estão salvos no mongo, neste caso o banco está localizado na nuvem. O banco possui as collections review e metadata, a primeira possui informações como o texto escrito de revisão e a nota dada ao produto, já na metadata estão algumas informações relacioanadas ao produto como preço e categoria.

```{r}
#biblioteca para conexão com o banco de dados mongo
library("mongolite")
library("devtools")
library("dplyr")

#Url de conexão vom o banco
driver_connector = "mongodb://pos_datascience:pos1234@ds163705.mlab.com:63705/games_amazon"

review <- mongo(collection = "review", 
               verbose = TRUE,
               url = driver_connector)


#Consulta dos dados, unindo as duas collections pelo código do produto
review_metadata <- review$aggregate('[
          {"$lookup" : {
            "from" : "metadata",
            "localField" : "asin",
            "foreignField" : "asin",
            "as" : "metadata"
          }},
          {"$limit": 500}
      ]')

```

Gráfico de regressão, para tentar identificar se existe alguma relação entre o preço do produto e a nota dada para aquele produto.

```{r}
#Aqui foi necessário extrair apenas o preço da coluna metadata
review_metadata = review_metadata %>%
  mutate(price = unlist(lapply(review_metadata[['metadata']], '[[', "price")))
  
scatter.smooth(x=review_metadata$price, y = review_metadata$overall, xlab = "Preço", ylab ="Nota")
```

### Clusterização de produtos mais comprados

  Foi utilizado o RapidMiner, com o algoritmo de clusterização FP-Grouwth (min. support = 0,019) e Create Association Rules (critério de confiança com mínima de 0,7).
  
 Abaixo, tabela gerada pela clusterização com grupos de 3 a 7 produtos.
  
```{r}
library(knitr)
library(readxl)
Grupos <- read_excel("data/Grupos.xlsx")
kable(Grupos, align = "c", caption = "Produtos associados")
```
 
  Vemos que o suporte máximo alcançado nos grupos formados foi de 0,063, para um grupo com 3 produtos.
  
  Em relação a cada grupo de produtos, temos que:
  - O grupo com 7 elementos teve suporte de 0,021.
  - Os grupos com 6 elementos tiveram suporte médio de 0,02240.
  - Os grupos com 5 elementos tiveram suporte médio de 0,02211.
  - Os grupos com 4 elementos tiveram suporte médio de 0,02282.
  - Os grupos com 3 elementos tiveram suporte médio de 0,02284.
  

# Conclusão

###Regressão Linear de Preço x Nota 
 Através dos resultados obtidos pelo gráfico onde no x está o preço do produto e na variável y a nota dada para o mesmo em determinado review, foi possível identificar que não existe nenhuma correlação entre preço e notas, ou seja, é possível ter um produto com uma boa nota e preço baixo e o uma boa nota e preço alto. 

###Clusterização de produtos mais comprados
 
 Com isso, temos que as médias dos grupos mantém certa estabilidade de suporte independente do número de elementos em cada grupo, com pequena prevalência dos grupos com os 2 menores números de elementos.




