s---
title: "Trabalho final Machine Learning I"
output:
  html_notebook:
    theme: united
    toc: yes 
    toc_depth: 2
  html_document:
    df_print: paged
    toc: yes
    toc_depth: '2'
  pdf_document:
    theme: united
    toc: yes
    toc_depth: 2
authores: Marcos Neco e Fabio Rowedder
---

##Abordagem do problema

Questões que esperamos explorar no nosso conjutos de dados 

* Quais grupos de games frequentemente comprados em conjunto? (Clusterização)
* Qual será a nota atribuída por um cliente amazon para determinado Game, baseado nos dados histórico? (Regressão) 

## Fase de pré-processamento 
 1. Foi necessário deletar todas as linhas que não estavam no padrão json, para que o import e futuramente o processamento no mongodb possa ser feito corretamente
 2. Importar os arquivos de review e metadata para o mongodb na nuvem

##Análise exploratória


```{r}
#leitura dos dados em formado json
library("rjson")
library("mongolite")
library("devtools")

driver_connector = "mongodb://pos_datascience:pos1234@ds163705.mlab.com:63705/games_amazon"

review <- mongo(collection = "review", 
               verbose = TRUE,
               url = driver_connector)

metadata <- mongo(collection = "metadata", 
               verbose = TRUE,
               url = driver_connector)

price <- metadata$find(
  fields ='{"asin":true, "price": true}',
  limit = 1000
)

overall <- review$find(
  fields = '{"asin":true, "overall":true}',
  limit = 1000
)

price_overall = merge(price, overall, "asin")
 length(price_overall$price)

#scatter.smooth(x=price_overall$price), y = abs(price_overall$overall))
```


```{r}

library("RMongo")

mongo <- mongoDbConnect("games_amazon", host = "ds163705.mlab.com", port = "63705")
dbAuthenticate(mongo, username = "pos_datascience", password = "pos1234")



otp <- dbAggregate(mongo, "review", c(' { "$project" : { "baz" : "$asin" } } ',
                                              ' { "$group" : { "_id" : "$asin" } } ',
                                              ' { "$match" : { "_id" : "bar" } } '))

print(otp)

dbDisconnect(mongo)

```



 Agora o próximo passo é descobrir a variável que tenha maior correlação com a variável que estamos tentando predizer, ou seja, a variável overall que representa a nota dada pelo jogo.
 
 
```{r}
#Gráfico de dispersão com
review_df  <- data.frame(sample(games_review))
metadata_df  <- data.frame(sample(games_metadata))
review_meta_df <- merge(x = review_df, y = metadata_df, by = "asin", all = TRUE)

scatter.smooth(x=review_meta_df$overall, y = review_meta_df$price, main="Overall ~ Price")
```

