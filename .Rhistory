version
summary(employes_df)
employes_df <- read.csv(file = "../machine_learning_r/HR_comma_sep.csv", sep = ",");
mean(employes_df$salary)
max(employes_df$satisfaction_level)
mean(employes_df$satisfaction_level)
min(employes_df$satisfaction_level)
median(employes_df$satisfaction_level)
sd(employes_df$satisfaction_level)
data <- read.csv(file = "../machine_learning_r/HR_comma_sep.csv", sep = ",");
data <- read.csv(file = "../machine_learning_r/HR_comma_sep.csv", sep = ",");
data <- read.csv(file = "../machine_learning_r/HR_comma_sep.csv", sep = ",");
library(mixtools)
data <- read.csv(file = "../machine_learning_r/HR_comma_sep.csv", sep = ",");
non_numerics <- names(data)[!sapply(data, is.numeric)]
source('~/machine_learning_r/exploratory_analysis.R', encoding = 'UTF-8')
data <- read.csv(file = "../machine_learning_r/HR_comma_sep.csv", sep = ",");
non_numerics <- names(data)[!sapply(data, is.numeric)]
data %>%
select(one_of(non_numerics)) %>%
summarise_each(funs(unique_vars = length(unique(.))))
#aplicando mediana nos dados
library(stringr)
library(readxl)
library(dplyr)
library(ggplot2)
library(tidyr)
library(readr)
library(stringr)
data <- read.csv(file = "../machine_learning_r/HR_comma_sep.csv", sep = ",");
non_numerics <- names(data)[!sapply(data, is.numeric)]
data %>%
select(one_of(non_numerics)) %>%
summarise_each(funs(unique_vars = length(unique(.))))
#aplicando mediana nos dados
#median(data$satisfaction_level)
#aplicando desvio padrão
#sd(data$satisfaction_level)
library(readxl)
library(dplyr)
library(ggplot2)
library(tidyr)
library(readr)
library(stringr)
data <- read.csv(file = "../machine_learning_r/HR_comma_sep.csv", sep = ",");
non_numerics <- names(data)[!sapply(data, is.numeric)]
data %>%
select(one_of(non_numerics)) %>%
summarise_all(funs(unique_vars = length(unique(.))))
#aplicando mediana nos dados
#median(data$satisfaction_level)
#aplicando desvio padrão
#sd(data$satisfaction_level)
data <- read.csv(file = "../machine_learning_r/HR_comma_sep.csv",
sep = ",",
col.names = c("Nivel Satisfação", "Ano Ultima Avaliação",
"Numero Projetos", "Numero de horas no trabalho",
"Anos na empresa", "Acidente na empresa", "Deixou Empresa",
"Promovido Ultimos 5 Anos", "Departamento", "Salário"));
library(readxl)
library(dplyr)
library(ggplot2)
library(tidyr)
library(readr)
library(stringr)
data <- read.csv(file = "../machine_learning_r/HR_comma_sep.csv",
sep = ",",
col.names = c("Nivel Satisfação", "Ano Ultima Avaliação",
"Numero Projetos", "Numero de horas no trabalho",
"Anos na empresa", "Acidente na empresa", "Deixou Empresa",
"Promovido Ultimos 5 Anos", "Departamento", "Salário"));
non_numerics <- names(data)[!sapply(data, is.numeric)]
data %>%
select(one_of(non_numerics)) %>%
summarise_all(funs(unique_vars = length(unique(.))))
#aplicando mediana nos dados
#median(data$satisfaction_level)
#aplicando desvio padrão
#sd(data$satisfaction_level)
library(readxl)
library(dplyr)
library(ggplot2)
library(tidyr)
library(readr)
library(stringr)
data <- read.csv(file = "../machine_learning_r/HR_comma_sep.csv",
sep = ",",
col.names = c("Nivel Satisfação", "Ano Ultima Avaliação",
"Numero Projetos", "Numero de horas no trabalho",
"Anos na empresa", "Acidente na empresa", "Deixou Empresa",
"Promovido Ultimos 5 Anos", "Departamento", "Salário"));
non_numerics <- names(data)[!sapply(data, is.numeric)]
data %>%
select(one_of(non_numeric_vars)) %>%
summarise_all(funs(unique_vars = length(unique(.))))
#aplicando mediana nos dados
#median(data$satisfaction_level)
#aplicando desvio padrão
#sd(data$satisfaction_level)
library(stringr)
library(readxl)
library(dplyr)
library(ggplot2)
library(tidyr)
library(readr)
library(stringr)
data <- read.csv(file = "../machine_learning_r/HR_comma_sep.csv",
sep = ",",
col.names = c("Nivel Satisfação", "Ano Ultima Avaliação",
"Numero Projetos", "Numero de horas no trabalho",
"Anos na empresa", "Acidente na empresa", "Deixou Empresa",
"Promovido Ultimos 5 Anos", "Departamento", "Salário"));
non_numerics <- names(data)[!sapply(data, is.numeric)]
data %>%
select(one_of(non_numeric_vars)) %>%
summarise_all(funs(unique_vars = length(unique(.))))
#aplicando mediana nos dados
#median(data$satisfaction_level)
#aplicando desvio padrão
#sd(data$satisfaction_level)
library(readxl)
library(dplyr)
library(ggplot2)
library(tidyr)
library(readr)
library(stringr)
data <- read.csv(file = "../machine_learning_r/HR_comma_sep.csv",
sep = ",",
col.names = c("Nivel Satisfação", "Ano Ultima Avaliação",
"Numero Projetos", "Numero de horas no trabalho",
"Anos na empresa", "Acidente na empresa", "Deixou Empresa",
"Promovido Ultimos 5 Anos", "Departamento", "Salário"));
non_numerics <- names(data)[!sapply(data, is.numeric)]
data %>%
select(one_of(non_numeric_vars)) %>%
summarise_each(funs(unique_vars = length(unique(.))))
#aplicando mediana nos dados
#median(data$satisfaction_level)
#aplicando desvio padrão
#sd(data$satisfaction_level)
library(readxl)
library(dplyr)
library(ggplot2)
library(tidyr)
library(readr)
library(stringr)
data <- read.csv(file = "../machine_learning_r/HR_comma_sep.csv",
sep = ",",
col.names = c("Nivel Satisfação", "Ano Ultima Avaliação",
"Numero Projetos", "Numero de horas no trabalho",
"Anos na empresa", "Acidente na empresa", "Deixou Empresa",
"Promovido Ultimos 5 Anos", "Departamento", "Salário"));
non_numerics <- names(data)[!sapply(data, is.numeric)]
data %>%
select(one_of(non_numerics)) %>%
summarise_each(funs(unique_vars = length(unique(.))))
#aplicando mediana nos dados
#median(data$satisfaction_level)
#aplicando desvio padrão
#sd(data$satisfaction_level)
library(readxl)
library(dplyr)
library(ggplot2)
library(tidyr)
library(readr)
library(stringr)
data <- read.csv(file = "../machine_learning_r/HR_comma_sep.csv",
sep = ",",
col.names = c("Nivel Satisfação", "Ano Ultima Avaliação",
"Numero Projetos", "Numero de horas no trabalho",
"Anos na empresa", "Acidente na empresa", "Deixou Empresa",
"Promovido Ultimos 5 Anos", "Departamento", "Salário"));
# Aqui foi feito uma an
non_numerics_vars <- names(data)[!sapply(data, is.numeric)]
data %>%
select(one_of(non_numerics_vars)) %>%
summarise_each(funs(unique_vars = length(unique(.))))
#aplicando mediana nos dados
#median(data$satisfaction_level)
#aplicando desvio padrão
#sd(data$satisfaction_level)
library(readxl)
library(dplyr)
library(ggplot2)
library(tidyr)
library(readr)
library(stringr)
data <- read.csv(file = "../machine_learning_r/HR_comma_sep.csv",
sep = ",",
col.names = c("Nivel Satisfação", "Ano Ultima Avaliação",
"Numero Projetos", "Numero de horas no trabalho",
"Anos na empresa", "Acidente na empresa", "Deixou Empresa",
"Promovido Ultimos 5 Anos", "Departamento", "Salário"));
# Aqui foi feito uma an
non_numerics_vars <- names(data)[!sapply(data, is.numeric)]
data %>%
select(one_of(non_numerics_vars)) %>%
summarise_each(funs(unique_vars = length(unique(.))))
#aplicando mediana nos dados
#median(data$satisfaction_level)
#aplicando desvio padrão
#sd(data$satisfaction_level)
# Aqui foi feito uma an
non_numerics_vars <- names(data)[!sapply(data, is.numeric)]
library(readxl)
library(dplyr)
library(ggplot2)
library(tidyr)
library(readr)
library(stringr)
data <- read.csv(file = "../machine_learning_r/SalariesSF.csv",
sep = ",");
# Aqui foi feito uma an
non_numerics_vars <- names(data)[!sapply(data, is.numeric)]
data %>%
select(one_of(non_numerics_vars)) %>%
summarise_each(funs(unique_vars = length(unique(.))))
# Aqui foi feito uma
media_salarial <-  mean(data, data$BasePay)
library(readxl)
library(dplyr)
library(ggplot2)
library(tidyr)
library(readr)
library(stringr)
data <- read.csv(file = "../machine_learning_r/SalariesSF.csv",
sep = ",");
# Aqui foi feito uma
media_salarial <-  mean(data, data$BasePay)
plot(cars)
install.packages("rjson")
games_review <- fromJSON(file="../data_amazon/review_games.json")
```{r}
```{r}
library("rjson")
library("rjson")
games_review <- fromJSON(file = "data_amazon/review_games.json")
library("rjson")
games_review <- fromJSON(file = "data_amazon/review_games.json")
head(games_review)
View(games_review)
#Gráfico de dispersão com
review_df  <- data.frame(sample(games_review))
metadata_df  <- data.frame(sample(games_metadata))
#leitura dos dados em formado json
library("rjson")
games_review <- fromJSON(file = "data_amazon/review_games.json")
View(games_review)
games_metadata <- fromJSON(file = "data_amazon/metadata_games.json")
library(devtools)
install_github(repo = "mongosoup/rmongodb")
